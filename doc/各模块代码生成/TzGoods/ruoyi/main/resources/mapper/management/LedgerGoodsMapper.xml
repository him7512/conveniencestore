<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liuqi.management.mapper.LedgerGoodsMapper">
    
    <resultMap type="LedgerGoods" id="LedgerGoodsResult">
        <result property="ledgerId"    column="ledger_id"    />
        <result property="goodsCode"    column="goods_code"    />
        <result property="storageLocation"    column="storage_location"    />
        <result property="goodsStatus"    column="goods_status"    />
        <result property="deptId"    column="dept_id"    />
        <result property="zoningCode"    column="zoning_code"    />
        <result property="createDate"    column="create_date"    />
        <result property="updateDate"    column="update_date"    />
        <result property="firstQuantity"    column="first_quantity"    />
        <result property="firstMeasurement"    column="first_measurement"    />
        <result property="secondQuantity"    column="second_quantity"    />
        <result property="secondMeasurement"    column="second_measurement"    />
        <result property="fsSubstitution"    column="fs_substitution"    />
        <result property="firstQuantityNow"    column="first_quantity_now"    />
        <result property="secondQuantityNow"    column="second_quantity_now"    />
        <result property="pricingFirst"    column="pricing_first"    />
        <result property="pricingSecond"    column="pricing_second"    />
        <result property="bundleSellCode"    column="bundle_sell_code"    />
        <result property="bundleSellPricing"    column="bundle_sell_pricing"    />
        <result property="profitUptonow"    column="profit_uptonow"    />
        <result property="sellByDate"    column="sell_by_date"    />
        <result property="freezeStatus"    column="freeze_status"    />
        <result property="discardStatus"    column="discard_status"    />
        <result property="transferStatus"    column="transfer_status"    />
        <result property="checkStatus"    column="check_status"    />
        <result property="splitStatus"    column="split_status"    />
        <result property="otherStatus"    column="other_status"    />
        <result property="goodsName"    column="goods_name"    />
        <result property="goodsAlias"    column="goods_alias"    />
        <result property="lockStatus"    column="lock_status"    />
    </resultMap>

    <sql id="selectLedgerGoodsVo">
        select ledger_id, goods_code, storage_location, goods_status, dept_id, zoning_code, create_date, update_date, first_quantity, first_measurement, second_quantity, second_measurement, fs_substitution, first_quantity_now, second_quantity_now, pricing_first, pricing_second, bundle_sell_code, bundle_sell_pricing, profit_uptonow, sell_by_date, freeze_status, discard_status, transfer_status, check_status, split_status, other_status, goods_name, goods_alias, lock_status from ledger_goods
    </sql>

    <select id="selectLedgerGoodsList" parameterType="LedgerGoods" resultMap="LedgerGoodsResult">
        <include refid="selectLedgerGoodsVo"/>
        <where>  
            <if test="goodsCode != null  and goodsCode != ''"> and goods_code = #{goodsCode}</if>
            <if test="storageLocation != null  and storageLocation != ''"> and storage_location = #{storageLocation}</if>
            <if test="goodsStatus != null  and goodsStatus != ''"> and goods_status = #{goodsStatus}</if>
            <if test="deptId != null "> and dept_id = #{deptId}</if>
            <if test="zoningCode != null  and zoningCode != ''"> and zoning_code = #{zoningCode}</if>
            <if test="params.beginCreateDate != null and params.beginCreateDate != '' and params.endCreateDate != null and params.endCreateDate != ''"> and create_date between #{params.beginCreateDate} and #{params.endCreateDate}</if>
            <if test="params.beginUpdateDate != null and params.beginUpdateDate != '' and params.endUpdateDate != null and params.endUpdateDate != ''"> and update_date between #{params.beginUpdateDate} and #{params.endUpdateDate}</if>
            <if test="firstQuantity != null "> and first_quantity = #{firstQuantity}</if>
            <if test="firstMeasurement != null  and firstMeasurement != ''"> and first_measurement = #{firstMeasurement}</if>
            <if test="secondQuantity != null "> and second_quantity = #{secondQuantity}</if>
            <if test="secondMeasurement != null  and secondMeasurement != ''"> and second_measurement = #{secondMeasurement}</if>
            <if test="fsSubstitution != null  and fsSubstitution != ''"> and fs_substitution = #{fsSubstitution}</if>
            <if test="firstQuantityNow != null "> and first_quantity_now = #{firstQuantityNow}</if>
            <if test="secondQuantityNow != null "> and second_quantity_now = #{secondQuantityNow}</if>
            <if test="pricingFirst != null "> and pricing_first = #{pricingFirst}</if>
            <if test="pricingSecond != null "> and pricing_second = #{pricingSecond}</if>
            <if test="bundleSellCode != null  and bundleSellCode != ''"> and bundle_sell_code = #{bundleSellCode}</if>
            <if test="bundleSellPricing != null  and bundleSellPricing != ''"> and bundle_sell_pricing = #{bundleSellPricing}</if>
            <if test="profitUptonow != null  and profitUptonow != ''"> and profit_uptonow = #{profitUptonow}</if>
            <if test="params.beginSellByDate != null and params.beginSellByDate != '' and params.endSellByDate != null and params.endSellByDate != ''"> and sell_by_date between #{params.beginSellByDate} and #{params.endSellByDate}</if>
            <if test="freezeStatus != null  and freezeStatus != ''"> and freeze_status = #{freezeStatus}</if>
            <if test="discardStatus != null  and discardStatus != ''"> and discard_status = #{discardStatus}</if>
            <if test="transferStatus != null  and transferStatus != ''"> and transfer_status = #{transferStatus}</if>
            <if test="checkStatus != null  and checkStatus != ''"> and check_status = #{checkStatus}</if>
            <if test="splitStatus != null  and splitStatus != ''"> and split_status = #{splitStatus}</if>
            <if test="otherStatus != null  and otherStatus != ''"> and other_status = #{otherStatus}</if>
            <if test="goodsName != null  and goodsName != ''"> and goods_name like concat(concat('%', #{goodsName}), '%')</if>
            <if test="goodsAlias != null  and goodsAlias != ''"> and goods_alias like concat(concat('%', #{goodsAlias}), '%')</if>
            <if test="lockStatus != null  and lockStatus != ''"> and lock_status = #{lockStatus}</if>
        </where>
    </select>
    
    <select id="selectLedgerGoodsByLedgerId" parameterType="Long" resultMap="LedgerGoodsResult">
        <include refid="selectLedgerGoodsVo"/>
        where ledger_id = #{ledgerId}
    </select>
        
    <insert id="insertLedgerGoods" parameterType="LedgerGoods">
        <selectKey keyProperty="ledgerId" resultType="long" order="BEFORE">
            SELECT seq_ledger_goods.NEXTVAL as ledgerId FROM DUAL
        </selectKey>
        insert into ledger_goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="ledgerId != null">ledger_id,</if>
            <if test="goodsCode != null and goodsCode != ''">goods_code,</if>
            <if test="storageLocation != null">storage_location,</if>
            <if test="goodsStatus != null and goodsStatus != ''">goods_status,</if>
            <if test="deptId != null">dept_id,</if>
            <if test="zoningCode != null">zoning_code,</if>
            <if test="createDate != null">create_date,</if>
            <if test="updateDate != null">update_date,</if>
            <if test="firstQuantity != null">first_quantity,</if>
            <if test="firstMeasurement != null and firstMeasurement != ''">first_measurement,</if>
            <if test="secondQuantity != null">second_quantity,</if>
            <if test="secondMeasurement != null and secondMeasurement != ''">second_measurement,</if>
            <if test="fsSubstitution != null and fsSubstitution != ''">fs_substitution,</if>
            <if test="firstQuantityNow != null">first_quantity_now,</if>
            <if test="secondQuantityNow != null">second_quantity_now,</if>
            <if test="pricingFirst != null">pricing_first,</if>
            <if test="pricingSecond != null">pricing_second,</if>
            <if test="bundleSellCode != null">bundle_sell_code,</if>
            <if test="bundleSellPricing != null">bundle_sell_pricing,</if>
            <if test="profitUptonow != null">profit_uptonow,</if>
            <if test="sellByDate != null">sell_by_date,</if>
            <if test="freezeStatus != null and freezeStatus != ''">freeze_status,</if>
            <if test="discardStatus != null and discardStatus != ''">discard_status,</if>
            <if test="transferStatus != null and transferStatus != ''">transfer_status,</if>
            <if test="checkStatus != null and checkStatus != ''">check_status,</if>
            <if test="splitStatus != null and splitStatus != ''">split_status,</if>
            <if test="otherStatus != null and otherStatus != ''">other_status,</if>
            <if test="goodsName != null and goodsName != ''">goods_name,</if>
            <if test="goodsAlias != null">goods_alias,</if>
            <if test="lockStatus != null">lock_status,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="ledgerId != null">#{ledgerId},</if>
            <if test="goodsCode != null and goodsCode != ''">#{goodsCode},</if>
            <if test="storageLocation != null">#{storageLocation},</if>
            <if test="goodsStatus != null and goodsStatus != ''">#{goodsStatus},</if>
            <if test="deptId != null">#{deptId},</if>
            <if test="zoningCode != null">#{zoningCode},</if>
            <if test="createDate != null">#{createDate},</if>
            <if test="updateDate != null">#{updateDate},</if>
            <if test="firstQuantity != null">#{firstQuantity},</if>
            <if test="firstMeasurement != null and firstMeasurement != ''">#{firstMeasurement},</if>
            <if test="secondQuantity != null">#{secondQuantity},</if>
            <if test="secondMeasurement != null and secondMeasurement != ''">#{secondMeasurement},</if>
            <if test="fsSubstitution != null and fsSubstitution != ''">#{fsSubstitution},</if>
            <if test="firstQuantityNow != null">#{firstQuantityNow},</if>
            <if test="secondQuantityNow != null">#{secondQuantityNow},</if>
            <if test="pricingFirst != null">#{pricingFirst},</if>
            <if test="pricingSecond != null">#{pricingSecond},</if>
            <if test="bundleSellCode != null">#{bundleSellCode},</if>
            <if test="bundleSellPricing != null">#{bundleSellPricing},</if>
            <if test="profitUptonow != null">#{profitUptonow},</if>
            <if test="sellByDate != null">#{sellByDate},</if>
            <if test="freezeStatus != null and freezeStatus != ''">#{freezeStatus},</if>
            <if test="discardStatus != null and discardStatus != ''">#{discardStatus},</if>
            <if test="transferStatus != null and transferStatus != ''">#{transferStatus},</if>
            <if test="checkStatus != null and checkStatus != ''">#{checkStatus},</if>
            <if test="splitStatus != null and splitStatus != ''">#{splitStatus},</if>
            <if test="otherStatus != null and otherStatus != ''">#{otherStatus},</if>
            <if test="goodsName != null and goodsName != ''">#{goodsName},</if>
            <if test="goodsAlias != null">#{goodsAlias},</if>
            <if test="lockStatus != null">#{lockStatus},</if>
         </trim>
    </insert>

    <update id="updateLedgerGoods" parameterType="LedgerGoods">
        update ledger_goods
        <trim prefix="SET" suffixOverrides=",">
            <if test="goodsCode != null and goodsCode != ''">goods_code = #{goodsCode},</if>
            <if test="storageLocation != null">storage_location = #{storageLocation},</if>
            <if test="goodsStatus != null and goodsStatus != ''">goods_status = #{goodsStatus},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="zoningCode != null">zoning_code = #{zoningCode},</if>
            <if test="createDate != null">create_date = #{createDate},</if>
            <if test="updateDate != null">update_date = #{updateDate},</if>
            <if test="firstQuantity != null">first_quantity = #{firstQuantity},</if>
            <if test="firstMeasurement != null and firstMeasurement != ''">first_measurement = #{firstMeasurement},</if>
            <if test="secondQuantity != null">second_quantity = #{secondQuantity},</if>
            <if test="secondMeasurement != null and secondMeasurement != ''">second_measurement = #{secondMeasurement},</if>
            <if test="fsSubstitution != null and fsSubstitution != ''">fs_substitution = #{fsSubstitution},</if>
            <if test="firstQuantityNow != null">first_quantity_now = #{firstQuantityNow},</if>
            <if test="secondQuantityNow != null">second_quantity_now = #{secondQuantityNow},</if>
            <if test="pricingFirst != null">pricing_first = #{pricingFirst},</if>
            <if test="pricingSecond != null">pricing_second = #{pricingSecond},</if>
            <if test="bundleSellCode != null">bundle_sell_code = #{bundleSellCode},</if>
            <if test="bundleSellPricing != null">bundle_sell_pricing = #{bundleSellPricing},</if>
            <if test="profitUptonow != null">profit_uptonow = #{profitUptonow},</if>
            <if test="sellByDate != null">sell_by_date = #{sellByDate},</if>
            <if test="freezeStatus != null and freezeStatus != ''">freeze_status = #{freezeStatus},</if>
            <if test="discardStatus != null and discardStatus != ''">discard_status = #{discardStatus},</if>
            <if test="transferStatus != null and transferStatus != ''">transfer_status = #{transferStatus},</if>
            <if test="checkStatus != null and checkStatus != ''">check_status = #{checkStatus},</if>
            <if test="splitStatus != null and splitStatus != ''">split_status = #{splitStatus},</if>
            <if test="otherStatus != null and otherStatus != ''">other_status = #{otherStatus},</if>
            <if test="goodsName != null and goodsName != ''">goods_name = #{goodsName},</if>
            <if test="goodsAlias != null">goods_alias = #{goodsAlias},</if>
            <if test="lockStatus != null">lock_status = #{lockStatus},</if>
        </trim>
        where ledger_id = #{ledgerId}
    </update>

    <delete id="deleteLedgerGoodsByLedgerId" parameterType="Long">
        delete from ledger_goods where ledger_id = #{ledgerId}
    </delete>

    <delete id="deleteLedgerGoodsByLedgerIds" parameterType="String">
        delete from ledger_goods where ledger_id in 
        <foreach item="ledgerId" collection="array" open="(" separator="," close=")">
            #{ledgerId}
        </foreach>
    </delete>
</mapper>