<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liuqi.sales.mapper.SalesDetailsMapper">

    <resultMap type="SalesDetails" id="SalesDetailsResult">
        <result property="salesId"    column="sales_id"    />
        <result property="goodsCode"    column="goods_code"    />
        <result property="salesDate"    column="sales_date"    />
        <result property="salesStatus"    column="sales_status"    />
        <result property="salesCode"    column="sales_code"    />
        <result property="salesQuantity"    column="sales_quantity"    />
        <result property="updateDate"    column="update_date"    />
        <result property="reasonRandc"    column="reason_randc"    />
        <result property="purchaserId"    column="purchaser_id"    />
        <result property="lossQuantity"    column="loss_quantity"    />
        <result property="salesCodeUplevel"    column="sales_code_uplevel"    />
        <result property="goodsName"    column="goods_name"    />
        <result property="goodsAlias"    column="goods_alias"    />
        <result property="salesCodeBundle"    column="sales_code_bundle"    />
    </resultMap>

    <sql id="selectSalesDetailsVo">
        select sales_id, goods_code, sales_date, sales_status, sales_code, sales_quantity, update_date, reason_randc, purchaser_id, loss_quantity, sales_code_uplevel, goods_name, goods_alias, sales_code_bundle from sales_details
    </sql>

    <select id="selectSalesDetailsList" parameterType="SalesDetails" resultMap="SalesDetailsResult">
        <include refid="selectSalesDetailsVo"/>
        <where>
            <if test="goodsCode != null  and goodsCode != ''"> and goods_code = #{goodsCode}</if>
            <if test="params.beginSalesDate != null and params.beginSalesDate != '' and params.endSalesDate != null and params.endSalesDate != ''"> and sales_date between TO_DATE(#{params.beginSalesDate}, 'YYYY-MM-DD') and TO_DATE(#{params.endSalesDate}, 'YYYY-MM-DD') </if>
            <if test="salesStatus != null  and salesStatus != ''"> and sales_status = #{salesStatus}</if>
            <if test="salesCode != null  and salesCode != ''"> and sales_code = #{salesCode}</if>
            <if test="salesQuantity != null  and salesQuantity != ''"> and sales_quantity = #{salesQuantity}</if>
            <if test="params.beginUpdateDate != null and params.beginUpdateDate != '' and params.endUpdateDate != null and params.endUpdateDate != ''"> and update_date between TO_DATE(#{params.beginUpdateDate}, 'YYYY-MM-DD') and TO_DATE(#{params.endUpdateDate, 'YYYY-MM-DD')}</if>
            <if test="reasonRandc != null  and reasonRandc != ''"> and reason_randc = #{reasonRandc}</if>
            <if test="purchaserId != null  and purchaserId != ''"> and purchaser_id = #{purchaserId}</if>
            <if test="lossQuantity != null  and lossQuantity != ''"> and loss_quantity = #{lossQuantity}</if>
            <if test="salesCodeUplevel != null  and salesCodeUplevel != ''"> and sales_code_uplevel = #{salesCodeUplevel}</if>
            <if test="goodsName != null  and goodsName != ''"> and goods_name like concat(concat('%', #{goodsName}), '%')</if>
            <if test="goodsAlias != null  and goodsAlias != ''"> and goods_alias like concat(concat('%', #{goodsAlias}), '%')</if>
            <if test="salesCodeBundle != null  and salesCodeBundle != ''"> and sales_code_bundle = #{salesCodeBundle}</if>
        </where>
    </select>

    <select id="selectSalesDetailsBySalesId" parameterType="Long" resultMap="SalesDetailsResult">
        <include refid="selectSalesDetailsVo"/>
        where sales_id = #{salesId}
    </select>

    <insert id="insertSalesDetails" parameterType="SalesDetails">
        <selectKey keyProperty="salesId" resultType="long" order="BEFORE">
            SELECT seq_sales_details.NEXTVAL as salesId FROM DUAL
        </selectKey>
        insert into sales_details
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="salesId != null">sales_id,</if>
            <if test="goodsCode != null and goodsCode != ''">goods_code,</if>
            <if test="salesDate != null">sales_date,</if>
            <if test="salesStatus != null and salesStatus != ''">sales_status,</if>
            <if test="salesCode != null and salesCode != ''">sales_code,</if>
            <if test="salesQuantity != null and salesQuantity != ''">sales_quantity,</if>
            <if test="updateDate != null">update_date,</if>
            <if test="reasonRandc != null">reason_randc,</if>
            <if test="purchaserId != null">purchaser_id,</if>
            <if test="lossQuantity != null">loss_quantity,</if>
            <if test="salesCodeUplevel != null">sales_code_uplevel,</if>
            <if test="goodsName != null and goodsName != ''">goods_name,</if>
            <if test="goodsAlias != null">goods_alias,</if>
            <if test="salesCodeBundle != null">sales_code_bundle,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="salesId != null">#{salesId},</if>
            <if test="goodsCode != null and goodsCode != ''">#{goodsCode},</if>
            <if test="salesDate != null">#{salesDate},</if>
            <if test="salesStatus != null and salesStatus != ''">#{salesStatus},</if>
            <if test="salesCode != null and salesCode != ''">#{salesCode},</if>
            <if test="salesQuantity != null and salesQuantity != ''">#{salesQuantity},</if>
            <if test="updateDate != null">#{updateDate},</if>
            <if test="reasonRandc != null">#{reasonRandc},</if>
            <if test="purchaserId != null">#{purchaserId},</if>
            <if test="lossQuantity != null">#{lossQuantity},</if>
            <if test="salesCodeUplevel != null">#{salesCodeUplevel},</if>
            <if test="goodsName != null and goodsName != ''">#{goodsName},</if>
            <if test="goodsAlias != null">#{goodsAlias},</if>
            <if test="salesCodeBundle != null">#{salesCodeBundle},</if>
        </trim>
    </insert>

    <update id="updateSalesDetails" parameterType="SalesDetails">
        update sales_details
        <trim prefix="SET" suffixOverrides=",">
            <if test="goodsCode != null and goodsCode != ''">goods_code = #{goodsCode},</if>
            <if test="salesDate != null">sales_date = #{salesDate},</if>
            <if test="salesStatus != null and salesStatus != ''">sales_status = #{salesStatus},</if>
            <if test="salesCode != null and salesCode != ''">sales_code = #{salesCode},</if>
            <if test="salesQuantity != null and salesQuantity != ''">sales_quantity = #{salesQuantity},</if>
            <if test="updateDate != null">update_date = #{updateDate},</if>
            <if test="reasonRandc != null">reason_randc = #{reasonRandc},</if>
            <if test="purchaserId != null">purchaser_id = #{purchaserId},</if>
            <if test="lossQuantity != null">loss_quantity = #{lossQuantity},</if>
            <if test="salesCodeUplevel != null">sales_code_uplevel = #{salesCodeUplevel},</if>
            <if test="goodsName != null and goodsName != ''">goods_name = #{goodsName},</if>
            <if test="goodsAlias != null">goods_alias = #{goodsAlias},</if>
            <if test="salesCodeBundle != null">sales_code_bundle = #{salesCodeBundle},</if>
        </trim>
        where sales_id = #{salesId}
    </update>

    <delete id="deleteSalesDetailsBySalesId" parameterType="Long">
        delete from sales_details where sales_id = #{salesId}
    </delete>

    <delete id="deleteSalesDetailsBySalesIds" parameterType="String">
        delete from sales_details where sales_id in
        <foreach item="salesId" collection="array" open="(" separator="," close=")">
            #{salesId}
        </foreach>
    </delete>
</mapper>